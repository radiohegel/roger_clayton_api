# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rails db:seed command (or created alongside the database with db:setup).
#
# Examples:
#
#   movies = Movie.create([{ name: 'Star Wars' }, { name: 'Lord of the Rings' }])
#   Character.create(name: 'Luke', movie: movies.first)

Project.create(title: "Awaken", description: "Awaken is a smart alarm clock system, in which a Raspberry Pi controlling a smart TV as a display maintains a connection with a web app built in Rails. Users can log into the web app to register their Awaken device, and then program alarms, selecting relevant information they wish to be provided to them at the time of the alarm. The information options include things like commuting time (allowing multiple means of transportation), weather, and current news. This project was completed by a team of five developers. My personal contributions were focused primarily on architecting and coding the device registration process, and the system for making API calls to consolidate data to be presented on the alarm display. The device registration design was particularly fun for me. I outfitted the Raspberry Pi with a simply python boot script, that would take the device's hardware ID and pass it along in a request to the Rails server. On the server side, the hardware ID gets checked against a database of registered devices. If a match is found, the server opens a publish/subscribe channel with the Pi, linked to the associated user, and sends a command to the Pi to turn on the smart TV and display a success screen. If the device ID is not found in the database, the server command instead prompts the Pi to load a registration instruction screen.")
Project.create(title: "climb_up", description: "climb_up is an app for finding friends to go climbing with. I was inspired to make this by my own experience moving to the Bay Area, and suddenly having none of my regular climbing partners from Salt Lake City. When you register an account on climb_up, you are able to select your home climbing gym, the grade at which you climb, and the climbing styles you enjoy. With partner matching enabled, you are be able to find climbing partners within a plus-or-minus one range of your climbing grade level. Thanks to the use of Twilio's text message API, you can send text messages to climbers you are matched with, straight through the app. I built climb_up in Ruby, using the Sinatra framework. It was an excellent learning experience, and I would very much like to revist the code and make some improvements.")